{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Julian/REACT/20_ Next/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/bojnice-castle-1603142898.jpg\",\n    address: \"2145 dfds dff\",\n    title: \"The first meetup\",\n    description: \"This is the first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://radevich7:test1Test@cluster0.7f3py.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for a single data\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        image: \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/bojnice-castle-1603142898.jpg\",\n        address: \"2145 dfds dff\",\n        id: {\n          meetupId\n        },\n        title: \"The first meetup\",\n        description: \"This is the first meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/Julian/REACT/20_ Next/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","props","meetupData","image","address","id","title","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,4FADR;AAEE,IAAA,OAAO,EAAC,eAFV;AAGE,IAAA,KAAK,EAAC,kBAHR;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,kGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,SAAO;AACLI,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,4FAFQ;AAGVC,QAAAA,OAAO,EAAE,eAHC;AAIVC,QAAAA,EAAE,EAAE;AAAER,UAAAA;AAAF,SAJM;AAKVS,QAAAA,KAAK,EAAE,kBALG;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAe3B,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\nconst MeetupDetails = () => {\n  return (\n    <MeetupDetail\n      image=\"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/bojnice-castle-1603142898.jpg\"\n      address=\"2145 dfds dff\"\n      title=\"The first meetup\"\n      description=\"This is the first meetup\"\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://radevich7:test1Test@cluster0.7f3py.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for a single data\n  const meetupId = context.params.meetupId;\n\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/bojnice-castle-1603142898.jpg\",\n        address: \"2145 dfds dff\",\n        id: { meetupId },\n        title: \"The first meetup\",\n        description: \"This is the first meetup\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}